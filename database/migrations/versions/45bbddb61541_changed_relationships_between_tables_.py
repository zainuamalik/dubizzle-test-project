"""Changed relationships between tables for RBAC

Revision ID: 45bbddb61541
Revises: fbbc65501985
Create Date: 2025-04-10 06:43:21.484734+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '45bbddb61541'
down_revision: Union[str, None] = 'fbbc65501985'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('privileges', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('privileges', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
    op.drop_index('ix_role_privileges_id', table_name='role_privileges')
    op.drop_index('ix_role_privileges_key', table_name='role_privileges')
    op.drop_index('ix_role_privileges_name', table_name='role_privileges')
    op.drop_constraint('role_privileges_role_id_fkey', 'role_privileges', type_='foreignkey')
    op.drop_constraint('role_privileges_privilege_id_fkey', 'role_privileges', type_='foreignkey')
    op.create_foreign_key(None, 'role_privileges', 'privileges', ['privilege_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'role_privileges', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.drop_column('role_privileges', 'name')
    op.drop_column('role_privileges', 'id')
    op.drop_column('role_privileges', 'updated_at')
    op.drop_column('role_privileges', 'key')
    op.drop_column('role_privileges', 'created_at')
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
    op.add_column('users', sa.Column('role', sa.String(length=50), nullable=True))
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_constraint('users_role_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('users_role_id_fkey', 'users', 'roles', ['role_id'], ['id'])
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_column('users', 'role')
    op.alter_column('roles', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('role_privileges', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('role_privileges', sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('role_privileges', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('role_privileges', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('role_privileges', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'role_privileges', type_='foreignkey')
    op.drop_constraint(None, 'role_privileges', type_='foreignkey')
    op.create_foreign_key('role_privileges_privilege_id_fkey', 'role_privileges', 'privileges', ['privilege_id'], ['id'])
    op.create_foreign_key('role_privileges_role_id_fkey', 'role_privileges', 'roles', ['role_id'], ['id'])
    op.create_index('ix_role_privileges_name', 'role_privileges', ['name'], unique=False)
    op.create_index('ix_role_privileges_key', 'role_privileges', ['key'], unique=True)
    op.create_index('ix_role_privileges_id', 'role_privileges', ['id'], unique=False)
    op.alter_column('privileges', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('privileges', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
